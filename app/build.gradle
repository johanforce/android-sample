plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'

    id "io.gitlab.arturbosch.detekt" version "1.21.0"
}

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    namespace 'com.ominext.moviedb'
    compileSdk 33

    defaultConfig {
        applicationId "com.tr4n.moviedb"
        minSdk 28
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions 'env'
    productFlavors {
        develop {
            dimension "env"
            applicationId "com.ominext.moviedb.dev"
            buildConfigField "String", "BASE_URL", "\"\""
            resValue "string", "app_name", "MovieDB DEV"
        }

        staging {
            dimension "env"
            applicationId "com.ominext.moviedb"
            buildConfigField "String", "BASE_URL", "\"\""
            resValue "string", "app_name", "MovieDB STG"
        }

        product {
            dimension "env"
            applicationId "com.ominext.moviedb"
            buildConfigField "String", "BASE_URL", "\"\""
            resValue "string", "app_name", "MovieDB"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    lintOptions {
        disable 'GradleDependency'
        disable 'UnusedResources'
        abortOnError false
        checkReleaseBuilds false
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'

    //Retrofit, RxJava, Gson
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.2'
    implementation 'com.google.code.gson:gson:2.8.8'

    //Glide
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    kapt 'com.github.bumptech.glide:compiler:4.12.0'

    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.2.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.2.0"
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'

    // Koin for the dependencies injections
    implementation "io.insert-koin:koin-android:3.3.1"

    //Kotlin Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2'

    //Room database
    implementation "androidx.room:room-runtime:2.4.0"
    kapt "androidx.room:room-compiler:2.4.0"
    implementation("androidx.room:room-ktx:2.4.0")
}

detekt {
    toolVersion = "1.21.0"
    config = files("detekt-config.yml")
    basePath = projectDir
    buildUponDefaultConfig = true
    allRules = true
    ignoredBuildTypes = ["release"]
    ignoredFlavors = ["production"]
    ignoredVariants = ["productionRelease"]
    reports {
        xml {
            enabled = true
            destination = file("build/reports/detekt.xml")
        }
        html {
            enabled = true
            destination = file("build/reports/detekt.html")
        }
        txt {
            enabled = true
            destination = file("build/reports/detekt.txt")
        }
    }
}
